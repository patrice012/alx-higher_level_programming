Module: ``4-print_square.py``
=======

Using: ``print_square`` function
=====


>>> print_square = __import__('4-print_square').print_square

test module docstring
    >>> m = __import__("4-print_square").__doc__
	>>> len(m) > 1
	True

test function docstring
    >>> f = __import__("4-print_square").print_square.__doc__
    >>> len(f) > 1
    True
    
    
>>> print_square(4)
####
####
####
####
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########
>>> print_square(5.3387542)
#####
#####
#####
#####
#####
>>> print_square(1)
#
>>> print_square(0)

>>> print_square(-1)
Traceback (most recent call last):
	...
ValueError: size must be >= 0

>>> print_square(-2.55)
Traceback (most recent call last):
	...
TypeError: size must be an integer

>>> print_square('5')
Traceback (most recent call last):
	...
TypeError: size must be an integer

>>> print_square('5.88')
Traceback (most recent call last):
	...
TypeError: size must be an integer

>>> print_square('final test')
Traceback (most recent call last):
	...
TypeError: size must be an integer

test no args
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

test with args
    >>> print_square(4)
    ####
    ####
    ####
    ####

test passing None:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test positive integers
    >>> print_square(1)
    #
    >>> print_square(2)
    ##
    ##
    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

test negative integers
    >>> print_square(-1)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

test floats
    >>> print_square(1.5)
    #

test strings
    >>> print_square("hello")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test lists
    >>> print_square([1, 2, 3])
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test tuples
    >>> print_square((1, 2, 3))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

test dicts
    >>> print_square({"a": 1, "b": 2})
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer
