test cases for matrix_mul
=========================

import the function
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul


test with two matrices
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

test with more than 2 elements in row
    >>> matrix_mul([[1, 2, 5], [8, 0, 1], [2 ,6 ,1]], [[2, 5, 2], [6, 3,1], [3, 4, 1]])
    [[40, 33, 11], [33, 43, 16], [33, 31, 11]]

test with None
    >>> matrix_mul([[1, 2], [3, 4]], None)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list
    >>> matrix_mul(None, [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

test with empty list
    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty
    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

test with wrong size
    >>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

test with wrong type
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "4"]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

test with wrong type
    >>> matrix_mul([[1, 2], [3, "4"]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

test with wrong type
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, []]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats
